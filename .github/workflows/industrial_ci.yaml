---
name: Industrial CI
on:
    workflow_call:
    workflow_dispatch:
    push:

jobs:
    # black:
    #     name: Black
    #     runs-on: ubuntu-20.04
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v3
    #         - name: Black
    #           uses: psf/black@23.11.0
    #           with:
    #               options: --line-length=99

    # spellcheck:
    #     name: Spellcheck
    #     runs-on: ubuntu-20.04
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v3
    #         - name: Spellcheck
    #           uses: rojopolis/spellcheck-github-actions@0.33.1

    ros_industrial_ci:
        name: ROS Industrial CI
        # needs:
        #     - black
        #     - spellcheck
        strategy:
            fail-fast: false
            matrix:
                ROS_DISTRO: [humble]
        runs-on: ubuntu-20.04

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Clone installation requirements
              shell: bash
              run: |
                python3 -m pip install -U vcstool
                vcs import . < ./rosbot/rosbot_hardware.repos && vcs import . < ./rosbot/rosbot_simulation.repos

            - name: Copy only diff_drive_controller and imu_sensor_broadcaster, waits for features from ros2-control
              shell: bash
              run: |
                  cp -r ros2_controllers/diff_drive_controller .
                  cp -r ros2_controllers/imu_sensor_broadcaster .
                  rm -rf ros2_controllers

            - name: Copy to src
              run: |
                  mkdir src
                  copy ./* src

            - name: Running ROS Industrial CI
              uses: ros-industrial/industrial_ci@master
              env:
                  ROS_DISTRO: ${{matrix.ROS_DISTRO}}
                  BEFORE_INIT: |
                    apt-get update && apt-get install -y python3-pip
                    python3 -m pip install -U rosdep
                    rosdep init
                    rosdep update --rosdistro ${{matrix.ROS_DISTRO}}
                    rosdep install -i --from-path . --rosdistro $ROS_DISTRO -y
