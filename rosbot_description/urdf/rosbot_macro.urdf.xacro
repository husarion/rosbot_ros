<?xml version='1.0'?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:macro name="rosbot_robot" params="mecanum use_sim use_gpu simulation_engine namespace ">

    <xacro:if value="${namespace == 'None'}">
      <xacro:property name="namespace_ext" value="" />
    </xacro:if>
    <xacro:unless value="${namespace == 'None'}">
        <xacro:property name="namespace_ext" value="${namespace}/" />
    </xacro:unless>

    <xacro:if value="${mecanum}">
      <xacro:property name="wheel_radius" value="0.0470" />
    </xacro:if>
    <xacro:unless value="${mecanum}">
      <xacro:property name="wheel_radius" value="0.0425" />
    </xacro:unless>

    <!-- INCLUDE ROBOT PARTS DEFINITIONS -->
    <xacro:include filename="$(find rosbot_description)/urdf/body.urdf.xacro" ns="body" />
    <xacro:include filename="$(find rosbot_description)/urdf/wheel.urdf.xacro" ns="wheel" />

    <!-- BODY DECLARATION -->
    <xacro:body.body wheel_radius="${wheel_radius}" mecanum="${mecanum}" use_gpu="${use_gpu}" namespace="${namespace}" />

    <!-- WHEEL DECLARATION -->
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" side="fr" mecanum="${mecanum}" />
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" side="fl" mecanum="${mecanum}" />
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" side="rl" mecanum="${mecanum}" />
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" side="rr" mecanum="${mecanum}" />

    <!-- ROS2 CONTROL -->
    <xacro:unless value="$(arg use_sim)">
      <ros2_control name="${namespace_ext}imu" type="sensor">
        <hardware>
          <plugin>rosbot_hardware_interfaces/RosbotImuSensor</plugin>
          <param name="connection_timeout_ms">120000</param>
          <param name="connection_check_period_ms">500</param>
        </hardware>
        <sensor name="${namespace_ext}imu">
          <state_interface name="orientation.x" />
          <state_interface name="orientation.y" />
          <state_interface name="orientation.z" />
          <state_interface name="orientation.w" />
          <state_interface name="angular_velocity.x" />
          <state_interface name="angular_velocity.y" />
          <state_interface name="angular_velocity.z" />
          <state_interface name="linear_acceleration.x" />
          <state_interface name="linear_acceleration.y" />
          <state_interface name="linear_acceleration.z" />
        </sensor>
      </ros2_control>
    </xacro:unless>

    <ros2_control name="${namespace_ext}wheels" type="system">
      <hardware>
        <xacro:unless value="$(arg use_sim)">
          <plugin>rosbot_hardware_interfaces/RosbotSystem</plugin>
          <param name="connection_timeout_ms">120000</param>
          <param name="connection_check_period_ms">500</param>

          <!-- Firmware from https://github.com/husarion/rosbot_ros2_firmware could not override this names -->
          <param name="velocity_command_joint_order">
                rr_wheel_joint,
                rl_wheel_joint,
                fr_wheel_joint,
                fl_wheel_joint
          </param>
        </xacro:unless>

        <xacro:if value="$(arg use_sim)">
          <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
            <plugin>ign_ros2_control/IgnitionSystem</plugin>
          </xacro:if>
          <xacro:if value="${simulation_engine == 'webots'}">
            <plugin>webots_ros2_control::Ros2ControlSystem</plugin>
          </xacro:if>
        </xacro:if>
      </hardware>

      <joint name="fl_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="fr_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="rl_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="rr_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>

      <xacro:if value="${use_sim}">
        <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
          <sensor name="${namespace_ext}imu">
            <state_interface name="orientation.x" />
            <state_interface name="orientation.y" />
            <state_interface name="orientation.z" />
            <state_interface name="orientation.w" />
            <state_interface name="angular_velocity.x" />
            <state_interface name="angular_velocity.y" />
            <state_interface name="angular_velocity.z" />
            <state_interface name="linear_acceleration.x" />
            <state_interface name="linear_acceleration.y" />
            <state_interface name="linear_acceleration.z" />
          </sensor>
        </xacro:if>
      </xacro:if>
    </ros2_control>

    <!-- GAZEBO PLUGINS DECLARATION -->
    <xacro:if value="${use_sim}">
      <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
        <gazebo>
          <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">

            <xacro:if value="${mecanum}">
              <parameters>$(find rosbot_controller)/config/mecanum_drive_controller.yaml</parameters>
            </xacro:if>
            <xacro:unless value="${mecanum}">
              <parameters>$(find rosbot_controller)/config/diff_drive_controller.yaml</parameters>
            </xacro:unless>

            <ros>
              <xacro:unless value="${namespace == 'None'}">
                <namespace>${namespace}</namespace>
              </xacro:unless>
              <remapping>rosbot_base_controller/cmd_vel_unstamped:=cmd_vel</remapping>
              <remapping>/tf:=tf</remapping>
            </ros>
          </plugin>
        </gazebo>
        <gazebo reference="imu_link">
          <sensor name="${namespace_ext}imu" type="imu">
            <always_on>true</always_on>
            <update_rate>25</update_rate>
            <topic>${namespace_ext}imu/data_raw</topic>
            <visualize>false</visualize>
            <enable_metrics>false</enable_metrics>
            <frame_id>imu_link</frame_id>
            <ignition_frame_id>imu_link</ignition_frame_id>
            <ros>
              <namespace>${namespace_ext}</namespace>
            </ros>
          </sensor>
        </gazebo>
      </xacro:if>

      <xacro:if value="${simulation_engine == 'gazebo-classic'}">
        <!-- Control robot wheels -->
        <xacro:unless value="${mecanum}">
          <gazebo>
            <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
              <ros></ros>
              <update_rate>10.0</update_rate>
              <num_wheel_pairs>2</num_wheel_pairs>
              <left_joint>fl_wheel_joint</left_joint>
              <right_joint>fr_wheel_joint</right_joint>
              <left_joint>rl_wheel_joint</left_joint>
              <right_joint>rr_wheel_joint</right_joint>
              <wheel_separation>0.192</wheel_separation>
              <wheel_separation>0.192</wheel_separation>
              <wheel_diameter>${wheel_radius*2.0}</wheel_diameter>
              <wheel_diameter>${wheel_radius*2.0}</wheel_diameter>
              <max_wheel_torque>1.5</max_wheel_torque>
              <max_wheel_acceleration>1.0</max_wheel_acceleration>
              <publish_odom>true</publish_odom>
              <publish_odom_tf>true</publish_odom_tf>
              <publish_wheel_tf>true</publish_wheel_tf>
              <odometry_frame>odom</odometry_frame>
              <robot_base_frame>base_link</robot_base_frame>
            </plugin>
          </gazebo>
        </xacro:unless>
        <!-- publish joint states -->
        <gazebo>
          <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
            <joint_name>fl_wheel_joint</joint_name>
            <joint_name>fr_wheel_joint</joint_name>
            <joint_name>rl_wheel_joint</joint_name>
            <joint_name>rr_wheel_joint</joint_name>
          </plugin>
        </gazebo>
        <!-- publish IMU -->
        <gazebo reference="imu_link">
          <sensor type="imu" name="imu">
            <always_on>true</always_on>
            <update_rate>25</update_rate>
            <plugin name="bno055_imu_plugin" filename="libgazebo_ros_imu_sensor.so">
              <ros>
                <argument>~/out:=imu/data/raw</argument>
              </ros>
            </plugin>
          </sensor>
        </gazebo>
      </xacro:if>

      <xacro:if value="${simulation_engine == 'webots'}">
        <webots>
          <plugin type="webots_ros2_control::Ros2Control" />
          <plugin type="webots_ros2_driver::Ros2IMU">
            <enabled>true</enabled>
            <topicName>/imu_broadcaster/imu</topicName>
            <alwaysOn>true</alwaysOn>
            <frameName>imu_link</frameName>
            <gyroName>imu gyro</gyroName>
            <accelerometerName>imu accelerometer</accelerometerName>
            <inertialUnitName>imu inertial_unit</inertialUnitName>
          </plugin>
        </webots>
      </xacro:if>
    </xacro:if>
  </xacro:macro>
</robot>
